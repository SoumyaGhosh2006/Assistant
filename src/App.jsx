import React, { useContext } from "react";
import "./App.css"
import { FaMicrophone, FaDownload } from "react-icons/fa";
import { LuRefreshCcw } from "react-icons/lu";
import speakimg from "./assets/speak.gif"
import va from "./assets/paimon.png"
import voicegif from "./assets/aiVoice.gif"
import { datacontext } from "./context/UserContext";

function App(){
  let {
    recognition, 
    speaking, 
    setSpeaking, 
    prompt, 
    response, 
    setPrompt, 
    setResponse, 
    handleRefresh,
    isPressed,
    setIsPressed,
    generatedImage,
    setGeneratedImage
  } = useContext(datacontext);

  

  return(
    <div className="main">
      <img src={va} alt="" id="assistant"></img>
      <span>I'm Paimon, your personal assistant</span>
      
      {!speaking ? 
        <div className="buttonRow">
          <button className={`mic-button ${isPressed ? "active" : ""}`}
                              onTouchStart={() => setIsPressed(true)}
                              onTouchEnd={() => setIsPressed(false)}
                              onMouseDown={() => setIsPressed(true)}
                              onMouseUp={() => setIsPressed(false)}
                              onClick={()=>{
                                setPrompt("Listening...")
                                setSpeaking(true)   
                                setResponse(false)
                                setGeneratedImage(null)
                                recognition.start()
                                }}>
            <FaMicrophone className="mic-icon" />
            <span className="mic-text">Speak</span>
          </button>

          <button className={`refresh ${isPressed ? "active" : ""}`}
                              onTouchStart={() => setIsPressed(true)}
                              onTouchEnd={() => setIsPressed(false)}
                              onMouseDown={() => setIsPressed(true)}
                              onMouseUp={() => setIsPressed(false)}
                              onClick={handleRefresh}>
            <LuRefreshCcw id="reload-icon"/>
          </button>
        </div>
        :
        <div className="response">
          {!response ?
          <img src={speakimg} alt="" id="speak"/>
          :
          <img src={voicegif} alt="" id="aigif"/> }

          <p>{prompt}</p>

          {/* Display generated image */}
          {generatedImage && (
            <div className="generated-image-container">
              <img src={generatedImage} alt="Generated by Paimon" className="generated-image" />
              <div className="image-controls">
                <button className="download-btn" onClick={downloadImage} title="Download Image">
                  <FaDownload />
                </button>
                <button className="close-btn" onClick={closeImage} title="Close Image">
                  Ã—
                </button>
              </div>
            </div>
          )}

        </div>
      }
      
    </div>
  )
}

export default App